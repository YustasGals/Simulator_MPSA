<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Simulator_MPSA"
        xmlns:Data="clr-namespace:Modbus.Data;assembly=NModbus4" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Simulator_MPSA.MainWindow"
        Title="Simulator_MPSA" Height="600" Width="1200" Icon="IMG/Simulator_MPSA.ico" >
    <Window.Resources>
        <XmlDataProvider x:Key="settingsXDP" Source="XMLs/settings.xml" XPath="clS" />
        <!--
            XML Source
            
            The actual file is saved in the root directory of the
            project and its Build Action is set to "Resource" in
            the file's properties window. This causes the file to
            be included in the assembly, and makes it available
            to the application as a resource.
        -->
        <XmlDataProvider x:Key="xmldata" Source="XMLs/Simconfig.xml" XPath="/root" />
    </Window.Resources>

    <Grid Loaded="Grid_Loaded" DataContext="{Binding TagSource, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:MainWindow}}}" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="36"/>
            <RowDefinition />
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="_File">
                <MenuItem Header="_New" />
                <MenuItem Header="_Open" Click="MenuItem_Click" />
                <MenuItem Header="_Save" Click="MenuItem_Click_save" />
                <Separator />
                <MenuItem Header="_Exit" Click="MenuItem_Click_1" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Command="Cut" />
                <MenuItem Command="Copy" />
                <MenuItem Command="Paste" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Manage users">
                    <!-- 
                        <MenuItem.Icon>
                            <Image Source="/WpfTutorialSamples;component/Images/user.png" />
                        </MenuItem.Icon>
                        -->
                </MenuItem>
                <MenuItem Header="_Show groups" IsCheckable="True" IsChecked="True" />
            </MenuItem>
            <Separator />
            <MenuItem Header="_About" HorizontalAlignment="Right" ></MenuItem>

        </Menu>
        <ToolBar Grid.Row="1" Grid.ColumnSpan="2">
            <Button x:Name="btnOpen" Click="btnOpen_Click" ToolTip="Open">
                <Image Source="IMG/open.png" />
            </Button>
            <Separator />
            <Button x:Name="btnSave" Click="btnSave_Click" ToolTip="Save">
                <Image Source="IMG/save.png" />
            </Button>
            <Separator />
            <Button x:Name="btnSaveAll" Click="btnSaveAll_Click" ToolTip="Save All">
                <Image Source="IMG/saveAll.png" />
            </Button>
            <Separator />
            <Button x:Name="btnClose" Click="btnClose_Click" ToolTip="Close">
                <Image Source="IMG/close.png" />
            </Button>
            <Separator />
            <Button x:Name="btnStart" Click="btnStart_Click" ToolTip="Start">
                <Image Source="IMG/START.png" />
            </Button>
            <Separator />
            <Button x:Name="btnPause" Click="btnPause_Click" ToolTip="Pause">
                <Image Source="IMG/PAUSE.png" />
            </Button>
            <Separator />
            <Button x:Name="btnStop" Click="btnStop_Click" ToolTip="Stop">
                <Image Source="IMG/STOP.png" />
            </Button>
            <Separator />
            <TextBox x:Name="tbFind" Foreground="LightGray" Width="100">Поиск...</TextBox>
        </ToolBar>

        <TreeView x:Name="dirTree" 
                ItemsSource="{Binding Mode=OneWay, Source={StaticResource xmldata}}"
                VirtualizingPanel.IsVirtualizing="False"
                VirtualizingPanel.VirtualizationMode="Standard" 
                  Grid.Row="2" Width="auto" >
            <TreeView.ItemTemplate>
                <!--
            Data Templates for each XML tag type expected in file.
            
            DataType        - Matches the tag name
            ItemsSource     - For tags that have descendents this
                              Henables the tree view to find them.
            XPath           - Specifies the attribute name to use.
            
            When the Xaml parser sees a tag with one of the names
            specified in DataType, it will use the associated
            template to display data about that node.
        -->
                <HierarchicalDataTemplate DataType="Node"
                                  ItemsSource="{Binding XPath=./*}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0"
                           Text="Node:" />
                        <TextBlock Margin="5,0,0,0"
                           Text="{Binding XPath=@name}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <!--<TreeView.ItemTemplate>
            <HierarchicalDataTemplate DataType="leaf">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0"
                           Text="Leaf:" />
                    <TextBlock Margin="5,0,0,0"
                           Text="{Binding XPath=@name}" />
                </StackPanel>
            </HierarchicalDataTemplate>
           <HierarchicalDataTemplate DataType="root"
                                  ItemsSource="{Binding XPath=./*}">
                <TextBlock Margin="0"
                       Text="ROOT" />
            </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>-->
        </TreeView>

        <TabControl x:Name="tabControl" Grid.Column="1" Grid.Row="2">
            <TabItem Header="Settings">
                <DataGrid x:Name="dataGridSettings" ItemsSource="{Binding Items}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" AutoGenerateColumns="True">
        
                </DataGrid>
            </TabItem>
            <TabItem Header="AI">
                <Grid >
                    <DataGrid x:Name="dataGridAI" ItemsSource="{Binding AIs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="DI">
                <Grid >
                    <DataGrid x:Name="dataGridDI" ItemsSource="{Binding DIs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="DO">
                <Grid >
                    <DataGrid x:Name="dataGridDO" ItemsSource="{Binding DOs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Enable" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridCheckBoxColumn Header="Value" Binding="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="indxArrDO" Binding="{Binding indxArrDO, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="indxBitDO" Binding="{Binding indxBitDO, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="indxR" Binding="{Binding indxR, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="TagDO" Binding="{Binding TegDO, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="ShortDesc" Binding="{Binding ShortDesc, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Header="Nsign" Binding="{Binding Nsign, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridCheckBoxColumn Header="Invert" Binding="{Binding InvertDO, UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridCheckBoxColumn Header="changedDO" Binding="{Binding changedDO, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="ZD" >
                <Grid >
                    <DataGrid x:Name="dataGridZD" ItemsSource="{Binding ZDs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" KeyDown="ZDTable_keydown" CanUserResizeRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Наименование" Binding="{Binding Description}"/>
                            <DataGridTextColumn Header="Группа" Binding="{Binding Group}"/>
                            <DataGridTextColumn Header="enable" Binding="{Binding En}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="KL">
                <Grid >
                    <DataGrid x:Name="dataGridKL" ItemsSource="{Binding IsAsync=True}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="VS">
                <Grid >
                    <DataGrid x:Name="dataGridVS" ItemsSource="{Binding VS}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" MouseDoubleClick="dataGridVS_MouseDoubleClick" />
                </Grid>
            </TabItem>
            <TabItem Header="MPNA">
                <Grid >
                    <DataGrid x:Name="dataGridMPNA" ItemsSource="{Binding IsAsync=True}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="R">
                <Grid >
                    <DataGrid x:Name="dataGridR" ItemsSource="{Binding IsAsync=True}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="W">
                <Grid >
                    <DataGrid x:Name="dataGridW" ItemsSource="{Binding IsAsync=True}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
        </TabControl>

        <StatusBar Grid.Row="3" Grid.ColumnSpan="2" />
    </Grid>
</Window>
