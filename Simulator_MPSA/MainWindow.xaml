<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Simulator_MPSA"
        xmlns:Data="clr-namespace:Modbus.Data;assembly=NModbus4" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Simulator_MPSA.MainWindow"
        Title="Имитатор полевых сигналов МПСА v1.0" Height="600" Width="1200" Icon="IMG/Simulator_MPSA.ico" >
    <Window.Resources>
        <XmlDataProvider x:Key="settingsXDP" Source="XMLs/settings.xml" XPath="clS" />
        <!--
            XML Source
            
            The actual file is saved in the root directory of the
            project and its Build Action is set to "Resource" in
            the file's properties window. This causes the file to
            be included in the assembly, and makes it available
            to the application as a resource.
        -->
        <XmlDataProvider x:Key="xmldata" Source="XMLs/Simconfig.xml" XPath="/root" />
    </Window.Resources>

    <Grid Loaded="Grid_Loaded" DataContext="{Binding TagSource, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:MainWindow}}}" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="36"/>
            <RowDefinition />
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="Файл">
                <MenuItem Header="Новый" />
                <MenuItem Header="Открыть все" Click="Menu_OpenAll"/>
                <MenuItem Header="Сохранить таблицу" Click="Menu_SaveSingle" />
                <MenuItem Header="Сохранить всё" Click="Menu_SaveAll" />
                <Separator />
                <MenuItem Header="_Exit" Click="MenuItem_Click_1" />
            </MenuItem>
            
            <MenuItem Header="Инструменты">
                <MenuItem Header="_Manage users">
                    <!-- 
                        <MenuItem.Icon>
                            <Image Source="/WpfTutorialSamples;component/Images/user.png" />
                        </MenuItem.Icon>
                        -->
                </MenuItem>
                <MenuItem Header="_Show groups" IsCheckable="True" IsChecked="True" />
            </MenuItem>
            <MenuItem Header="О программе" HorizontalAlignment="Right" ></MenuItem>

        </Menu>
        <ToolBar Grid.Row="1" Grid.ColumnSpan="2">
            <Button x:Name="btnOpen" Click="Menu_OpenAll" ToolTip="Open">
                <Image Source="IMG/open.png" />
            </Button>
            <Separator />
            <Button x:Name="btnSave" Click="Menu_SaveSingle" ToolTip="Save">
                <Image Source="IMG/save.png" />
            </Button>
            <Separator />
            <Button x:Name="btnSaveAll" Click="Menu_SaveAll" ToolTip="Save All">
                <Image Source="IMG/saveAll.png" />
            </Button>
            <Button x:Name="btnClose" Click="btnClose_Click" ToolTip="Close"/>
            <Separator />
            <Button x:Name="btnStart" Click="btnStart_Click" ToolTip="Start" AutomationProperties.HelpText="Пуск">
                <Image Source="IMG/START.png" />
            </Button>
            <Separator />
            <Button x:Name="btnPause" Click="btnPause_Click" ToolTip="Pause" AutomationProperties.HelpText="Пауза">
                <Image Source="IMG/PAUSE.png" />
            </Button>
            <Separator />
            <Button x:Name="btnStop" Click="btnStop_Click" ToolTip="Stop">
                <Image Source="IMG/STOP.png" AutomationProperties.HelpText="Стоп" />
            </Button>
            <Separator />

        </ToolBar>

        <TreeView x:Name="dirTree" 
                ItemsSource="{Binding Mode=OneWay, Source={StaticResource xmldata}}"
                VirtualizingPanel.IsVirtualizing="False"
                VirtualizingPanel.VirtualizationMode="Standard" 
                  Grid.Row="2" Width="auto" >
            <TreeView.ItemTemplate>
                <!--
            Data Templates for each XML tag type expected in file.
            
            DataType        - Matches the tag name
            ItemsSource     - For tags that have descendents this
                              Henables the tree view to find them.
            XPath           - Specifies the attribute name to use.
            
            When the Xaml parser sees a tag with one of the names
            specified in DataType, it will use the associated
            template to display data about that node.
        -->
                <HierarchicalDataTemplate DataType="Node"
                                  ItemsSource="{Binding XPath=./*}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0"
                           Text="Node:" />
                        <TextBlock Margin="5,0,0,0"
                           Text="{Binding XPath=@name}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <!--<TreeView.ItemTemplate>
            <HierarchicalDataTemplate DataType="leaf">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0"
                           Text="Leaf:" />
                    <TextBlock Margin="5,0,0,0"
                           Text="{Binding XPath=@name}" />
                </StackPanel>
            </HierarchicalDataTemplate>
           <HierarchicalDataTemplate DataType="root"
                                  ItemsSource="{Binding XPath=./*}">
                <TextBlock Margin="0"
                       Text="ROOT" />
            </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>-->
        </TreeView>

        <TabControl x:Name="tabControl" Grid.Column="1" Grid.Row="2">
            <TabItem Header="Настройки подключения">
                <DataGrid x:Name="dataGridSettings" ItemsSource="{Binding Items}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" AutoGenerateColumns="True">
        
                </DataGrid>
            </TabItem>
            <TabItem Header="AI">
                <Grid >
                    <DataGrid x:Name="dataGridAI" ItemsSource="{Binding AIs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="DI">
                <Grid >
                    <DataGrid x:Name="dataGridDI" ItemsSource="{Binding DIs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
            <TabItem Header="DO">
                <Grid >
                    <DataGrid x:Name="dataGridDO" ItemsSource="{Binding DOs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Enable" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                            <DataGridCheckBoxColumn Header="Значение" Binding="{Binding Value, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridTextColumn Header="Индекс сигнала" Binding="{Binding indxArrDO, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridTextColumn Header="Канал" Binding="{Binding indxBitDO, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridTextColumn Header="Модуль" Binding="{Binding indxR, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridTextColumn Header="Тэг" Binding="{Binding TegDO, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridTextColumn Header="Наименование" Binding="{Binding ShortDesc, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridTextColumn Header="Nsign" Binding="{Binding Nsign, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                            <DataGridCheckBoxColumn Header="Инвертировать" Binding="{Binding InvertDO, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" />
                           
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="ZD" >
                <Grid >
                    <DataGrid x:Name="dataGridZD" ItemsSource="{Binding ZDs}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" CanUserResizeRows="False" AutoGenerateColumns="False" MouseDoubleClick="dataGridZD_MouseDoubleClick">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Включить" Binding="{Binding En}" />
                            <DataGridTextColumn Header="Наименование" Binding="{Binding Description}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Группа" Binding="{Binding Group}"  IsReadOnly="True"/>
                            <DataGridTextColumn Header="Состояние" Binding="{Binding StateZD}"  IsReadOnly="True"/>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="KL">
                <Grid >
                    <DataGrid x:Name="dataGridKL" ItemsSource="{Binding KL}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" AutoGenerateColumns="False" MouseDoubleClick="dataGridKL_MouseDoubleClick" >
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Включить" Binding="{Binding En}"/>
                            <DataGridTextColumn Header="Наименование" Binding="{Binding Description}"  IsReadOnly="True"/>
                            <DataGridTextColumn Header="Группа" Binding="{Binding Group}"  IsReadOnly="True"/>
                            <DataGridTextColumn Header="Состояние" Binding="{Binding State}"  IsReadOnly="True"/>
                            <DataGridTextColumn Header="Положение,%" Binding="{Binding KLProc}"  IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="VS">
                <Grid >
                    <DataGrid x:Name="dataGridVS" ItemsSource="{Binding VS}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" MouseDoubleClick="dataGridVS_MouseDoubleClick" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Включить" Binding="{Binding En}" IsReadOnly="False"/>
                            <DataGridTextColumn Header="Наименование" Binding="{Binding Description}" IsReadOnly="False"/>
                            <DataGridTextColumn Header="Группа" Binding="{Binding Group}" IsReadOnly="False"/>
                            <DataGridTextColumn Header="Состояние" Binding="{Binding State}" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="Остановлен">
                                                <Setter Property="Background" Value="Yellow"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="В работе">
                                                <Setter Property="Background" Value="Green"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="Запускается">
                                                <Setter Property="Background" Value="GreenYellow"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="Останавливается">
                                                <Setter Property="Background" Value="YellowGreen"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns> 
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="MPNA">
                <Grid >
                    <DataGrid x:Name="dataGridMPNA" ItemsSource="{Binding IsAsync=True}" AlternatingRowBackground="LightBlue" AlternationCount="2" FontSize="12" />
                </Grid>
            </TabItem>
        </TabControl>

        <StatusBar Grid.Row="3" Grid.ColumnSpan="2" />
    </Grid>
</Window>
